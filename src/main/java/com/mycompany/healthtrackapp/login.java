/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.healthtrackapp;

import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import static com.mongodb.client.model.Filters.eq;
import org.bson.Document;
import org.bson.types.ObjectId;
import java.awt.Font;
import java.awt.FontFormatException;
import java.io.IOException;
import java.io.InputStream;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;

/**
 *
 * @author bimazznxt
 */
public class login extends javax.swing.JFrame {

    private static final Map<String, String> USERS = new HashMap<>();
    private Font multiLanguageFont; // Variabel untuk menyimpan font
    private MongoCollection<Document> usersCollection;
    private static MongoClient mongoClient; // Make it static to be accessible across instances if needed

    /**
     * Creates new form login
     */
    public login() {
        // Coba muat font kustom saat inisialisasi
        try {
            InputStream is = getClass().getResourceAsStream("/fonts/NotoSans-Regular.ttf"); // Sesuaikan path jika berbeda
            if (is != null) {
                multiLanguageFont = Font.createFont(Font.TRUETYPE_FONT, is).deriveFont(Font.PLAIN, 14f); // Ukuran font 14
                is.close();
            } else {
                System.err.println("Font file not found: /fonts/NotoSans-Regular.ttf");
                // Gunakan font default jika font kustom tidak ditemukan
                multiLanguageFont = new Font("SansSerif", Font.PLAIN, 14);
            }
        } catch (FontFormatException | IOException e) {
            System.err.println("Error loading font: " + e.getMessage());
            multiLanguageFont = new Font("SansSerif", Font.PLAIN, 14); // Fallback ke font default
        }

        try {
            mongoClient = MongoClients.create("mongodb://localhost:27017"); // Your MongoDB connection string
            MongoDatabase database = mongoClient.getDatabase("UAS"); // Your database name
            usersCollection = database.getCollection("healthTrack");
        } catch (Exception e) {
            System.err.println("Error connecting to MongoDB: " + e.getMessage());
            JOptionPane.showMessageDialog(this, "Failed to connect to database.", "Error", JOptionPane.ERROR_MESSAGE);
            // Consider exiting or disabling functionality if DB connection is critical
        }

        initComponents();
        applyFontToComponents();
        updateLanguage("Bahasa Indonesia");
    }

    private void applyFontToComponents() {
        if (multiLanguageFont != null) {
            jLabel1.setFont(multiLanguageFont);
            jLabel2.setFont(multiLanguageFont);
            jLabel3.setFont(multiLanguageFont);
            jLabel4.setFont(multiLanguageFont);
            jTextField1.setFont(multiLanguageFont);
            jPasswordField1.setFont(multiLanguageFont);
            masuk.setFont(multiLanguageFont);
            buatAkun.setFont(multiLanguageFont);
            jComboBox1.setFont(multiLanguageFont);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        masuk = new javax.swing.JButton();
        jPasswordField1 = new javax.swing.JPasswordField();
        buatAkun = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Login");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 25, 320, -1));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jPanel2.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 112, 190, -1));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Username:");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, -1, -1));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Password:");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, -1));

        masuk.setText("Masuk");
        masuk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masukActionPerformed(evt);
            }
        });
        jPanel2.add(masuk, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 260, -1));

        jPasswordField1.setText("jPasswordField1");
        jPanel2.add(jPasswordField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 150, 190, -1));

        buatAkun.setText("Buat Akun");
        buatAkun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buatAkunActionPerformed(evt);
            }
        });
        jPanel2.add(buatAkun, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 261, 260, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 80, 320, 350));

        jComboBox1.setForeground(new java.awt.Color(255, 255, 255));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bahasa Indonesia", "English", "Korean", "Chinese", "Japanese", "Russian" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(602, 20, 140, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Pilih Bahasa:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(487, 20, 110, -1));

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void buatAkunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buatAkunActionPerformed
        String username = jTextField1.getText();
        String password = new String(jPasswordField1.getPassword());

        if (username.isEmpty() || password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Username dan password tidak boleh kosong.", "Pendaftaran Gagal", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Check if username already exists in MongoDB
        Document existingUser = usersCollection.find(eq("username", username)).first();
        if (existingUser != null) {
            JOptionPane.showMessageDialog(this, "Username sudah ada. Silakan pilih username lain.", "Pendaftaran Gagal", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                String hashedPassword = hashPassword(password);
                Document newUser = new Document("username", username)
                        .append("passwordHash", hashedPassword)
                        .append("createdAt", new Date()); // Store creation timestamp
                usersCollection.insertOne(newUser);
                JOptionPane.showMessageDialog(this, "Akun berhasil dibuat!", "Pendaftaran Berhasil", JOptionPane.INFORMATION_MESSAGE);
                jTextField1.setText("");
                jPasswordField1.setText("");
            } catch (NoSuchAlgorithmException ex) {
                JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat mengenkripsi password.", "Error", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            } catch (Exception ex) { // Catch any MongoDB related exceptions
                JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menyimpan akun.", "Error Database", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_buatAkunActionPerformed

    private void masukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masukActionPerformed
        String username = jTextField1.getText();
        String password = new String(jPasswordField1.getPassword());

        if (username.isEmpty() || password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Username dan password tidak boleh kosong.", "Login Gagal", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            String hashedPassword = hashPassword(password);
            Document userDoc = usersCollection.find(eq("username", username)).first();

            if (userDoc != null) {
                String storedPasswordHash = userDoc.getString("passwordHash");
                if (hashedPassword.equals(storedPasswordHash)) {
                    JOptionPane.showMessageDialog(this, "Login Berhasil!", "Selamat Datang", JOptionPane.INFORMATION_MESSAGE);
                    // Pass the user's ObjectId to the UI to link health records
                    new UI(userDoc.getObjectId("_id")).setVisible(true);
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Password salah.", "Login Gagal", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Username tidak ditemukan.", "Login Gagal", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NoSuchAlgorithmException ex) {
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat otentikasi.", "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        } catch (Exception ex) { // Catch any MongoDB related exceptions
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat otentikasi dengan database.", "Error Database", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }//GEN-LAST:event_masukActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        String selectedLanguage = (String) jComboBox1.getSelectedItem();
        updateLanguage(selectedLanguage);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buatAkun;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton masuk;
    // End of variables declaration//GEN-END:variables

    private String hashPassword(String password) throws NoSuchAlgorithmException {
        MessageDigest md = MessageDigest.getInstance("SHA-256");
        md.update(password.getBytes());
        byte[] digest = md.digest();
        StringBuilder sb = new StringBuilder();
        for (byte b : digest) {
            sb.append(String.format("%02x", b & 0xff));
        }
        return sb.toString();
    }

    private void updateLanguage(String language) {
        // This is a basic example. For many languages, use ResourceBundle.
        switch (language) {
            case "Bahasa Indonesia":
                jLabel1.setText("Login");
                jLabel2.setText("Username:");
                jLabel3.setText("Password:");
                masuk.setText("Masuk");
                buatAkun.setText("Buat Akun");
                jLabel4.setText("Pilih Bahasa:");
                break;
            case "English":
                jLabel1.setText("Login");
                jLabel2.setText("Username:");
                jLabel3.setText("Password:");
                masuk.setText("Sign In");
                buatAkun.setText("Create Account");
                jLabel4.setText("Select Language:");
                break;
            case "Korean":
                jLabel1.setText("로그인");
                jLabel2.setText("사용자 이름:");
                jLabel3.setText("비밀번호:");
                masuk.setText("로그인");
                buatAkun.setText("계정 생성");
                jLabel4.setText("언어 선택:");
                break;
            case "Chinese":
                jLabel1.setText("登录");
                jLabel2.setText("用户名:");
                jLabel3.setText("密码:");
                masuk.setText("登录");
                buatAkun.setText("创建账户");
                jLabel4.setText("选择语言:");
                break;
            case "Russian":
                jLabel1.setText("Вход");
                jLabel2.setText("Имя пользователя:");
                jLabel3.setText("Пароль:");
                masuk.setText("Войти");
                buatAkun.setText("Создать аккаунт");
                jLabel4.setText("Выбрать язык:");
                break;
        }
    }
}
